# docker box definition
box: maven:latest
#
# # defining the dev pipeline
dev:
   steps:
     - script:
           name: Exporting_proxy
           code: |
                export http_proxy=http://www-proxy.us.oracle.com:80
                export https_proxy=http://www-proxy.us.oracle.com:80
     - xenoterracide/maven:
        settings: settings.xml
        goals: package
#        goals: test
       # A step that executes `gradle bootRun` command
     #- alianza/maven:
#           goals: -Dmaven.test.failure.ignore=false package
#     - install-packages:
#        packages: maven:3.0.5
build:
   steps:
      - xenoterracide/maven:
         goals: package

maven-test:
   steps:
    - xenoterracide/maven:
        type: maven test
        goals: test

#push-to-dockerhub:
#  steps:
#    # Push to docker repo
#    - internal/docker-push:
#        username: $DOCKER_USERNAME
#        password: $DOCKER_PASSWORD
#        tag: latest
#        repository: $DOCKER_REPOSITORY
#        registry: $DOCKER_REGISTRY
deploy-rsync:
   steps:
    - rsync-deploy:
            host: 10.180.61.180
            homepath: /var/www
            directory: CounterWebApp
            sshkey: $PRIVATE_KEY
            user: $SSH_USER

#deploy-aws:
#    steps:
#        - edgecaseadmin/install-aws-cli:
#            key: $AWS_KEY
#            secret: $AWS_SECRET
#            region: $AWS_REGION
#        - script:
#            name: "Push application build to S3"
#            code: |
#                aws s3 cp /pipeline/src/target/CounterWebApp.war   s3://$AWS_S3_BUCKET_NAME.s3-website-$AWS_REGION.amazonaws.com/CounterWebApp.war
#
#deploy-aws:
#    - script:
#      name: copy
#      code: mkdir /app && cp /pipeline/source/target/CounterWebApp.war /app/
#    - tonnu/aws-ecs:
#      key: $AWS_ACCESS_KEY
#      secret: $AWS_SECRET_KEY
#      region: $AWS_REGION              
