# docker box definition
#box: maven:3.5.0
# # defining the dev pipeline 1

dev:
  box: "maven:3.5.0"
  steps:
    - script:
        code: |
            export http_proxy=http://www-proxy.us.oracle.com:80
            export https_proxy=http://www-proxy.us.oracle.com:80
        name: Exporting_proxy
    - xenoterracide/maven:
        goals: package
        settings: settings.xml

build:
   box: maven:3.5.0
   steps:
      - xenoterracide/maven:
         goals: package
      - script:
            name: copy artifacts
            code: cp target/CounterWebApp.war $WERCKER_OUTPUT_DIR
            code: cp -R target $WERCKER_OUTPUT_DIR
            code: cp target/CounterWebApp.war $WERCKER_ROOT

maven-test: 
  box: "maven:3.5.0"
  steps: 
    - script: 
        name: "Copy pom.xml"
        code: cp $WERCKER_ROOT/pom.xml $WERCKER_OUTPUT_DIR       
        code: cp $WERCKER_ROOT/CounterWebApp.war $WERCKER_OUTPUT_DIR
    - xenoterracide/maven: 
      type: "maven test"
      goals: test
    - script:
          name: copy artifact to output
          copy: cp $WERCKER_OUTPUT_DIR/CounterWebApp.war $WERCKER_ROOT
    
push-tomcat-to-docker: 
  box: "tomcat:7.0"
  steps: 
    - internal/docker-scratch-push: 
        username: $QUAY_USERNAME
        password: $QUAY_PASSWORD
        tag: tomcat_$WERCKER_GIT_BRANCH-WERCKER_GIT_COMMIT
        registry: "https://quay.io"
        repository: repository/sachinpa/werckerkubernets

push-war-to-docker: 
  box: "busybox:latest"
  steps: 
    - script: 
        code: |
            find . -type f -name CounterWebApp.war    
            mkdir /app
            cp $WERCKER_ROOT/CounterWebApp.war /app    
        name: "copy war file"
    - internal/docker-scratch-push: 
        username: $QUAY_USERNAME
        password: $QUAY_PASSWORD
        registry: "https://registry.hub.docker.com"
        repository: sachinapatil/counterwebapp
        tag: war-$WERCKER_GIT_BRANCH-$WERCKER_GIT_COMMIT
        cmd: "cp CounterWebApp.wiar /app && tail -f /dev/null"

deploy-kube:
  steps:
    - bash-template:
        cwd: deployment

    - script:
        name: Copy kubernetes files
        cwd: $WERCKER_OUTPUT_DIR
        code: |
          cp $WERCKER_ROOT/javaweb2.yaml $WERCKER_OUTPUT_DIR
          
    - kubectl:
        name: deploy to kubernetes
        cwd: $WERCKER_OUTPUT_DIR
        server: $AWS_ACCESS_KEY_ID
        token: $AWS_SECRET_ACCESS_KEY
        insecure-skip-tls-verify: true
        command: apply -f javaweb2.yaml
